-- https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Goldschmidt%E2%80%99s_algorithm
require "math"

local function goldschmidt_sqrt1(x: number): number
  if ((x == 0) or (x == 1) or (x == math.huge)) then
    return x
  elseif (x < 0) then
    return (0 / 0)
  end
  
  local b, y = x, (x * 0.25)
  local z = y
  local res = x * z
  
  while true do
    local pre_res = res
    
    b = b * y * y
    y = (3 - b) * 0.5
    res = res * y
    z = z * y
    
    if (pre_res == res) then break end
  end
  
  return res
end

local function goldschmidt_sqrt2(x: number): number
  if ((x == 0) or (x == 1) or (x == math.huge)) then
    return x
  elseif (x < 0) then
    return (0 / 0)
  end
  
  local y: number = x * 0.25
  local res: number = x * y
  local h: number = y * 0.5
  local r: number = (1 - (2 * res * h)) * 0.5
  
  while true do
    local pre_res: number = res
    local n: number = r + 1
    
    res = res * n
    h = h * n
    r = (1 - (2 * res * h)) * 0.5
    
    if (pre_res == res) then break end
  end
  
  return res
end

local function main(): cint
  local x: number = goldschmidt_sqrt1(2)
  local y: number = goldschmidt_sqrt2(2)
  local z: number = math.sqrt(2)
  
  print(x, y, z)
  
  return 0
end

return main()
